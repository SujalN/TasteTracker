{"ast":null,"code":"var _jsxFileName = \"/Users/sujalnahata/Documents/GitHub/TasteTracker/frontend/src/components/BrandInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BrandInput({\n  onCompare\n}) {\n  _s();\n  const [input, setInput] = useState('');\n  const [list, setList] = useState([]);\n  const addBrand = () => {\n    const name = input.trim();\n    if (name && !list.includes(name)) {\n      setList([...list, name]);\n      setInput('');\n    }\n  };\n  const removeBrand = name => setList(list.filter(b => b !== name));\n  const submit = () => {\n    if (list.length >= 2) onCompare(list);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Enter brand name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBrand,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '8px 0'\n      },\n      children: list.map(b => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: 8\n        },\n        children: [b, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeBrand(b),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, b, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      disabled: list.length < 2,\n      children: [\"Compare \", list.length, \" brands\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(BrandInput, \"pgEnTjzaMugrMeuosKaThfGWepE=\");\n_c = BrandInput;\nvar _c;\n$RefreshReg$(_c, \"BrandInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BrandInput","onCompare","_s","input","setInput","list","setList","addBrand","name","trim","includes","removeBrand","filter","b","submit","length","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","margin","map","marginRight","disabled","_c","$RefreshReg$"],"sources":["/Users/sujalnahata/Documents/GitHub/TasteTracker/frontend/src/components/BrandInput.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function BrandInput({ onCompare }) {\n  const [input, setInput] = useState('');\n  const [list, setList] = useState([]);\n\n  const addBrand = () => {\n    const name = input.trim();\n    if (name && !list.includes(name)) {\n      setList([...list, name]);\n      setInput('');\n    }\n  };\n\n  const removeBrand = (name) =>\n    setList(list.filter((b) => b !== name));\n\n  const submit = () => {\n    if (list.length >= 2) onCompare(list);\n  };\n\n  return (\n    <div>\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter brand name\"\n      />\n      <button onClick={addBrand}>Add</button>\n      <div style={{ margin: '8px 0' }}>\n        {list.map((b) => (\n          <span key={b} style={{ marginRight: 8 }}>\n            {b}{' '}\n            <button onClick={() => removeBrand(b)}>Ã—</button>\n          </span>\n        ))}\n      </div>\n      <button onClick={submit} disabled={list.length < 2}>\n        Compare {list.length} brands\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,IAAI,GAAGL,KAAK,CAACM,IAAI,CAAC,CAAC;IACzB,IAAID,IAAI,IAAI,CAACH,IAAI,CAACK,QAAQ,CAACF,IAAI,CAAC,EAAE;MAChCF,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEG,IAAI,CAAC,CAAC;MACxBJ,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,MAAMO,WAAW,GAAIH,IAAI,IACvBF,OAAO,CAACD,IAAI,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKL,IAAI,CAAC,CAAC;EAEzC,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIT,IAAI,CAACU,MAAM,IAAI,CAAC,EAAEd,SAAS,CAACI,IAAI,CAAC;EACvC,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MACEkB,KAAK,EAAEd,KAAM;MACbe,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF1B,OAAA;MAAQ2B,OAAO,EAAEnB,QAAS;MAAAS,QAAA,EAAC;IAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvC1B,OAAA;MAAK4B,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAZ,QAAA,EAC7BX,IAAI,CAACwB,GAAG,CAAEhB,CAAC,iBACVd,OAAA;QAAc4B,KAAK,EAAE;UAAEG,WAAW,EAAE;QAAE,CAAE;QAAAd,QAAA,GACrCH,CAAC,EAAE,GAAG,eACPd,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACE,CAAC,CAAE;UAAAG,QAAA,EAAC;QAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFxCZ,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAQ2B,OAAO,EAAEZ,MAAO;MAACiB,QAAQ,EAAE1B,IAAI,CAACU,MAAM,GAAG,CAAE;MAAAC,QAAA,GAAC,UAC1C,EAACX,IAAI,CAACU,MAAM,EAAC,SACvB;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACvB,EAAA,CAxCuBF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}